{
                
            }
            {
                activeStep === 2 ? 
                    <div className="place-order-personal-address-main-box">  
                        <div className="place-order-personal-address-box">
                            <div className="place-order-delivery-tag">
                                <h1 style={{textAlign:"center"}}>Personal Address</h1>
                            </div>
                            <div className="place-order-personal-address-box-two">
                                <h3 className="place-order-form-input-field">{ addressId[0]?.name }</h3> 
                                <p>
                                    { addressId[0]?.address }<br/>{ addressId[0]?.state }-{ addressId[0]?.pinCode }<br/> { addressId[0]?.cityDistrictTown }<br/>
                                    Landmark : {addressId[0]?.landmark} <br/>Phone Number : { addressId[0]?.mobileNumber }
                                </p>
                            </div>
                        </div>
                        <div>
                        {
                            productIdAndSize !== 'Cart'
                            ?
                            <>
                            <div className="place-order-delivery-tag">
                                <h1 style={{textAlign:"center"}}>Order Summery</h1>
                            </div>
                            <div className="place-order-summery-main-box">
                                <div>
                                    <img 
                                        src={giveMeImages(singleProduct?.productPictures[0].img)}
                                        alt="" 
                                        style={{objectFit:"contain", width:"200px"}}    
                                    />
                                    <div>
                                        <h3 className="place-order-form-input-field">{singleProduct?.productName}</h3>
                                        <h4 className="place-order-form-input-field">Size: {singleProductSize}</h4>
                                        <div className="place-order-add-sub-delete-box">
                                            <div className="place-order-add-sub-delete-box">
                                                <button style={{ 
                                                            border: '1px solid #e8e8e1', 
                                                            padding:'10px', 
                                                            cursor: 'pointer',
                                                            display:"flex",
                                                            alignItems: "center",
                                                            justifyContent: "center"
                                                        }} onClick={()=>{
                                                    setProductQuantity(productQuantity - 1)
                                                    if(productQuantity <= 1){
                                                        setProductQuantity(1)
                                                    }
                                                }}>
                                                    <RemoveIcon style={{ fontSize: '16px' }} />
                                                </button>
                                                <h4 className="place-order-form-input-field" 
                                                    style={{ 
                                                        border: '1px solid #e8e8e1',
                                                        height:"38px",
                                                        width: "42px",
                                                        display:"flex",
                                                        alignItems: "center",
                                                        justifyContent: "center"
                                                    }}>
                                                    {productQuantity}
                                                </h4>
                                                <button style={{ 
                                                            border: '1px solid #e8e8e1', 
                                                            padding:'10px', 
                                                            cursor: 'pointer',
                                                            display:"flex",
                                                            alignItems: "center",
                                                            justifyContent: "center"
                                                        }} onClick={()=>setProductQuantity(productQuantity + 1)}>
                                                    <AddIcon style={{ fontSize: '16px' }} />
                                                </button>
                                            </div>
                                            <DeleteIcon style={{ fontSize: '20px' }}/>
                                        </div>
                                        <h4 className="place-order-form-input-field">Rs. {singleProduct?.sellingPrice}</h4>
                                    </div>
                                </div> 
                                <div>
                                    <h3 className="place-order-form-input-field">SUBTOTAL</h3>
                                    <h3 className="place-order-form-input-field">Rs. {totalPrizeFunc()}</h3>
                                </div>
                                <button className="place-order-add-address-form-buttton" onClick={()=>onConfirmOrder()}>Confirm Order</button>
                            </div>
                            </>
                            :
                            <>
                                <div className="place-order-delivery-tag">
                                    <h1 style={{textAlign:"center"}}>Order Summery</h1>
                                </div>
                                {
                                    allCartItem?.length > 0 &&
                                    allCartItem.map((value, index) => {
                                        return (
                                            <div key={index}>
                                                <img 
                                                    src={giveMeImages(value.productId.productPictures[0].img)}
                                                    alt="" 
                                                    style={{objectFit:"contain",width:"150px"}}    
                                                />
                                                <div>
                                                    <h3>{value.productId.productName}</h3>
                                                    <h4>Size: {value.size}</h4>
                                                    {addSubDeleteFunc(value.productId._id, value.size, value.qty)}
                                                    <h4>Rs. {value.productId.sellingPrice}</h4>
                                                </div>
                                            </div>
                                        )
                                    })
                                }
                                <div>
                                    <h3>SUBTOTAL</h3>
                                    <h3>Rs. {totalPrizeFunc()}</h3>
                                </div>
                                <button style={{border:"1px solid black"}} onClick={()=>onConfirmOrder()}>Confirm Order</button>
                            </>
                        }
                        </div>
                    </div>
                    :
                    null
                }


///////  functions in place Order

const totalPrizeFunc = () =>{
    if(productIdAndSize === 'Cart'){
        const totalPrize = allCartItem?.length > 0  ? allCartItem.reduce((total, value) => total + (parseInt(value.productId.sellingPrice) * (value.qty)), 0) : 0
        // setTotalProductPrice(totalPrize)
        return totalPrize
    }else{
        const totalPrize = singleProduct.sellingPrice * productQuantity
        // setTotalProductPrice(totalPrize)
        return totalPrize
    }
}

const DeliveryAddress = (AddressChoose) =>{
    setDeliverAddress(AddressChoose)
    setActiveStep(2)
}

const onConfirmOrder = () =>{
    const payload = {
        addressId:addressId[0]?._id,
        totalAmount:totalPrizeFunc(),
        items:[
                productId:singleProduct?._id,
                payablePrice:singleProduct?.sellingPrice,
                purChaseQty:productQuantity
            }
        ],
        paymentStatus:'pending'
    }
    console.log('payload')
    dispatch(addOrder(payload))
}

const addSubDeleteFunc = ( productId, size, quantity ) =>{
    return(
        <div>
            <div>
                <button style={{ borderRight: '1px solid #e8e8e1', cursor: 'pointer' }} onClick={() => itemDecrementFnc(productId, size)} >
                    <RemoveIcon style={{ fontSize: '16px' }} />
                </button>
                <h4>{quantity}</h4>
                <button style={{ borderLeft: '1px solid #e8e8e1', cursor: 'pointer' }} onClick={() => itemIncrementFnc(productId, size)} >
                    <AddIcon style={{ fontSize: '16px' }} />
                </button>
            </div>
            <DeleteIcon style={{ fontSize: '20px' }} onClick={() => deleteCartItemFnc(productId, size)} />
        </div>
    )
}


const itemIncrementFnc = (productId, size) => {
        const product = [{ productId, size, qty: 1 }]
        dispatch(addToCart(product))
    }

const itemDecrementFnc = (productId, size) => {
    const product = [{ productId, size, qty: -1 }]
    dispatch(addToCart(product))
}

const deleteCartItemFnc = (productId, size) => {
    dispatch(removeCartItem(productId, size))
}

const addressId = Delivery?.address.length > 0 && Delivery?.address.filter((value) => value.address ===  deliverAddress?.address )
console.log(addressId)

////// useEffect and const

orderSummeryFunc(singleProduct,singleProductSize,productQuantity, ()=> setProductQuantity())
:allCartItem?.length > 0 && allCartItem.map(value => orderSummeryFunc(value.productId,value.size))
